plugins {
    id 'java'
    id 'xyz.jpenilla.run-paper' version "2.3.1"
    id("io.github.goooler.shadow") version "8.1.8"
}

group = 'de.varilx'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "varilx"
        url = uri("https://reposilite.varilx.de/Varilx")
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:${paper_version}")
    compileOnly("org.projectlombok:lombok:1.18.38")
    implementation("de.varilx:base-api:1.1.0")
    compileOnly ("com.github.MilkBowl:VaultAPI:1.7.1")

    annotationProcessor("org.projectlombok:lombok:1.18.38")
    testImplementation("org.projectlombok:lombok:1.18.38")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.38")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks {
    runServer {
        minecraftVersion("1.21.3")

        downloadPlugins {
            url("https://dev.bukkit.org/projects/vault/files/latest")
        }
    }
}

shadowJar {
    archiveFileName.set("VEconomy-$project_version" + ".jar")
}
